/*
 * Esprinet Customer Rest Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * Contact: dl-ws-integration@esprinet.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.OperationResult;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * OrderTransactionOutput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-12-17T14:59:51.596+01:00")
public class OrderTransactionOutput {
  @SerializedName("date")
  private OffsetDateTime date = null;

  @SerializedName("esprinetOrderId")
  private String esprinetOrderId = null;

  /**
   * Inidicate if the transaction has been completed
   */
  @JsonAdapter(CommitStatusEnum.Adapter.class)
  public enum CommitStatusEnum {
    PENDING("Pending"),
    
    APPLIEDWITHREJECTIONS("AppliedWithRejections"),
    
    REJECTED("Rejected"),
    
    OK("Ok");

    private String value;

    CommitStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CommitStatusEnum fromValue(String text) {
      for (CommitStatusEnum b : CommitStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CommitStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CommitStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CommitStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextObject();
        return CommitStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("commitStatus")
  private CommitStatusEnum commitStatus = null;

  @SerializedName("transactionId")
  private Integer transactionId = null;

  @SerializedName("operationResult")
  private OperationResult operationResult = null;

  public OrderTransactionOutput date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * The Transaction Date
   * @return date
  **/
  @ApiModelProperty(required = true, value = "The Transaction Date")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public OrderTransactionOutput esprinetOrderId(String esprinetOrderId) {
    this.esprinetOrderId = esprinetOrderId;
    return this;
  }

   /**
   * The esprinet order id reference
   * @return esprinetOrderId
  **/
  @ApiModelProperty(value = "The esprinet order id reference")
  public String getEsprinetOrderId() {
    return esprinetOrderId;
  }

  public void setEsprinetOrderId(String esprinetOrderId) {
    this.esprinetOrderId = esprinetOrderId;
  }

  public OrderTransactionOutput commitStatus(CommitStatusEnum commitStatus) {
    this.commitStatus = commitStatus;
    return this;
  }

   /**
   * Inidicate if the transaction has been completed
   * @return commitStatus
  **/
  @ApiModelProperty(required = true, value = "Inidicate if the transaction has been completed")
  public CommitStatusEnum getCommitStatus() {
    return commitStatus;
  }

  public void setCommitStatus(CommitStatusEnum commitStatus) {
    this.commitStatus = commitStatus;
  }

  public OrderTransactionOutput transactionId(Integer transactionId) {
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Contains the generated transaction Id.
   * @return transactionId
  **/
  @ApiModelProperty(required = true, value = "Contains the generated transaction Id.")
  public Integer getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(Integer transactionId) {
    this.transactionId = transactionId;
  }

  public OrderTransactionOutput operationResult(OperationResult operationResult) {
    this.operationResult = operationResult;
    return this;
  }

   /**
   * Contains information about the result of this service call.
   * @return operationResult
  **/
  @ApiModelProperty(required = true, value = "Contains information about the result of this service call.")
  public OperationResult getOperationResult() {
    return operationResult;
  }

  public void setOperationResult(OperationResult operationResult) {
    this.operationResult = operationResult;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderTransactionOutput orderTransactionOutput = (OrderTransactionOutput) o;
    return Objects.equals(this.date, orderTransactionOutput.date) &&
        Objects.equals(this.esprinetOrderId, orderTransactionOutput.esprinetOrderId) &&
        Objects.equals(this.commitStatus, orderTransactionOutput.commitStatus) &&
        Objects.equals(this.transactionId, orderTransactionOutput.transactionId) &&
        Objects.equals(this.operationResult, orderTransactionOutput.operationResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, esprinetOrderId, commitStatus, transactionId, operationResult);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderTransactionOutput {\n");
    
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    esprinetOrderId: ").append(toIndentedString(esprinetOrderId)).append("\n");
    sb.append("    commitStatus: ").append(toIndentedString(commitStatus)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    operationResult: ").append(toIndentedString(operationResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

