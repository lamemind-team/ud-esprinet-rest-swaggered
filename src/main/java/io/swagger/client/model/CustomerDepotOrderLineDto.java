/*
 * Esprinet Customer Rest Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * Contact: dl-ws-integration@esprinet.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.OrderDocument;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CustomerDepotOrderLineDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-12-17T14:59:51.596+01:00")
public class CustomerDepotOrderLineDto {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("productCode")
  private String productCode = null;

  @SerializedName("configuration")
  private String _configuration = null;

  @SerializedName("esprinetProductCode")
  private String esprinetProductCode = null;

  @SerializedName("customerProductCode")
  private String customerProductCode = null;

  @SerializedName("quantity")
  private Integer quantity = null;

  @SerializedName("productGroup")
  private String productGroup = null;

  @SerializedName("remainingForDelivery")
  private Integer remainingForDelivery = null;

  @SerializedName("reservedQuantity")
  private Integer reservedQuantity = null;

  @SerializedName("deliveryNotes")
  private List<OrderDocument> deliveryNotes = null;

  @SerializedName("orderStatusId")
  private String orderStatusId = null;

  public CustomerDepotOrderLineDto id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Esprinet-generated order line number.
   * @return id
  **/
  @ApiModelProperty(value = "Esprinet-generated order line number.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CustomerDepotOrderLineDto productCode(String productCode) {
    this.productCode = productCode;
    return this;
  }

   /**
   * Product code.
   * @return productCode
  **/
  @ApiModelProperty(value = "Product code.")
  public String getProductCode() {
    return productCode;
  }

  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }

  public CustomerDepotOrderLineDto _configuration(String _configuration) {
    this._configuration = _configuration;
    return this;
  }

   /**
   * Configuration code.
   * @return _configuration
  **/
  @ApiModelProperty(value = "Configuration code.")
  public String getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(String _configuration) {
    this._configuration = _configuration;
  }

  public CustomerDepotOrderLineDto esprinetProductCode(String esprinetProductCode) {
    this.esprinetProductCode = esprinetProductCode;
    return this;
  }

   /**
   * Esprinet product code.
   * @return esprinetProductCode
  **/
  @ApiModelProperty(value = "Esprinet product code.")
  public String getEsprinetProductCode() {
    return esprinetProductCode;
  }

  public void setEsprinetProductCode(String esprinetProductCode) {
    this.esprinetProductCode = esprinetProductCode;
  }

  public CustomerDepotOrderLineDto customerProductCode(String customerProductCode) {
    this.customerProductCode = customerProductCode;
    return this;
  }

   /**
   * Customer product code (if available).
   * @return customerProductCode
  **/
  @ApiModelProperty(value = "Customer product code (if available).")
  public String getCustomerProductCode() {
    return customerProductCode;
  }

  public void setCustomerProductCode(String customerProductCode) {
    this.customerProductCode = customerProductCode;
  }

  public CustomerDepotOrderLineDto quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Amount of ordered items.
   * @return quantity
  **/
  @ApiModelProperty(required = true, value = "Amount of ordered items.")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public CustomerDepotOrderLineDto productGroup(String productGroup) {
    this.productGroup = productGroup;
    return this;
  }

   /**
   * Depending on the availability of each product at the time of the order, items ordered together may not be shipped together. Usually this allows to improve the service to the customer because the delay of a single item&#39;s delivery does not prevent the other items in the order to be shipped. In cases this behaviour is not wanted (like when multiple items are part of a whole, must be used together and splitting the shipping doesn&#39;t make sense) it is possible to change it by setting an integer value from 1 to 5 in this field. Ordered products with the same value for this field are always shipped together as a whole.
   * @return productGroup
  **/
  @ApiModelProperty(value = "Depending on the availability of each product at the time of the order, items ordered together may not be shipped together. Usually this allows to improve the service to the customer because the delay of a single item's delivery does not prevent the other items in the order to be shipped. In cases this behaviour is not wanted (like when multiple items are part of a whole, must be used together and splitting the shipping doesn't make sense) it is possible to change it by setting an integer value from 1 to 5 in this field. Ordered products with the same value for this field are always shipped together as a whole.")
  public String getProductGroup() {
    return productGroup;
  }

  public void setProductGroup(String productGroup) {
    this.productGroup = productGroup;
  }

  public CustomerDepotOrderLineDto remainingForDelivery(Integer remainingForDelivery) {
    this.remainingForDelivery = remainingForDelivery;
    return this;
  }

   /**
   * Amount of remaining items to be delivered.
   * @return remainingForDelivery
  **/
  @ApiModelProperty(value = "Amount of remaining items to be delivered.")
  public Integer getRemainingForDelivery() {
    return remainingForDelivery;
  }

  public void setRemainingForDelivery(Integer remainingForDelivery) {
    this.remainingForDelivery = remainingForDelivery;
  }

  public CustomerDepotOrderLineDto reservedQuantity(Integer reservedQuantity) {
    this.reservedQuantity = reservedQuantity;
    return this;
  }

   /**
   * Amount of reserved items to be delivered.
   * @return reservedQuantity
  **/
  @ApiModelProperty(value = "Amount of reserved items to be delivered.")
  public Integer getReservedQuantity() {
    return reservedQuantity;
  }

  public void setReservedQuantity(Integer reservedQuantity) {
    this.reservedQuantity = reservedQuantity;
  }

  public CustomerDepotOrderLineDto deliveryNotes(List<OrderDocument> deliveryNotes) {
    this.deliveryNotes = deliveryNotes;
    return this;
  }

  public CustomerDepotOrderLineDto addDeliveryNotesItem(OrderDocument deliveryNotesItem) {
    if (this.deliveryNotes == null) {
      this.deliveryNotes = new ArrayList<OrderDocument>();
    }
    this.deliveryNotes.add(deliveryNotesItem);
    return this;
  }

   /**
   * Get a list of delivery notes ids connected to the order
   * @return deliveryNotes
  **/
  @ApiModelProperty(value = "Get a list of delivery notes ids connected to the order")
  public List<OrderDocument> getDeliveryNotes() {
    return deliveryNotes;
  }

  public void setDeliveryNotes(List<OrderDocument> deliveryNotes) {
    this.deliveryNotes = deliveryNotes;
  }

  public CustomerDepotOrderLineDto orderStatusId(String orderStatusId) {
    this.orderStatusId = orderStatusId;
    return this;
  }

   /**
   * Get orderStatusId
   * @return orderStatusId
  **/
  @ApiModelProperty(value = "")
  public String getOrderStatusId() {
    return orderStatusId;
  }

  public void setOrderStatusId(String orderStatusId) {
    this.orderStatusId = orderStatusId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDepotOrderLineDto customerDepotOrderLineDto = (CustomerDepotOrderLineDto) o;
    return Objects.equals(this.id, customerDepotOrderLineDto.id) &&
        Objects.equals(this.productCode, customerDepotOrderLineDto.productCode) &&
        Objects.equals(this._configuration, customerDepotOrderLineDto._configuration) &&
        Objects.equals(this.esprinetProductCode, customerDepotOrderLineDto.esprinetProductCode) &&
        Objects.equals(this.customerProductCode, customerDepotOrderLineDto.customerProductCode) &&
        Objects.equals(this.quantity, customerDepotOrderLineDto.quantity) &&
        Objects.equals(this.productGroup, customerDepotOrderLineDto.productGroup) &&
        Objects.equals(this.remainingForDelivery, customerDepotOrderLineDto.remainingForDelivery) &&
        Objects.equals(this.reservedQuantity, customerDepotOrderLineDto.reservedQuantity) &&
        Objects.equals(this.deliveryNotes, customerDepotOrderLineDto.deliveryNotes) &&
        Objects.equals(this.orderStatusId, customerDepotOrderLineDto.orderStatusId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, productCode, _configuration, esprinetProductCode, customerProductCode, quantity, productGroup, remainingForDelivery, reservedQuantity, deliveryNotes, orderStatusId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDepotOrderLineDto {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    esprinetProductCode: ").append(toIndentedString(esprinetProductCode)).append("\n");
    sb.append("    customerProductCode: ").append(toIndentedString(customerProductCode)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    productGroup: ").append(toIndentedString(productGroup)).append("\n");
    sb.append("    remainingForDelivery: ").append(toIndentedString(remainingForDelivery)).append("\n");
    sb.append("    reservedQuantity: ").append(toIndentedString(reservedQuantity)).append("\n");
    sb.append("    deliveryNotes: ").append(toIndentedString(deliveryNotes)).append("\n");
    sb.append("    orderStatusId: ").append(toIndentedString(orderStatusId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

