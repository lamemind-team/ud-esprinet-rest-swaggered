/*
 * Esprinet Customer Rest Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * Contact: dl-ws-integration@esprinet.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CashAndCarriesProductAvailabilityByCodeDto;
import io.swagger.client.model.OperationResult;
import java.io.IOException;

/**
 * CashAndCarryProductAvailabilityByCodeOutput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-12-17T14:59:51.596+01:00")
public class CashAndCarryProductAvailabilityByCodeOutput {
  @SerializedName("cashAndCarriesProductAvailability")
  private CashAndCarriesProductAvailabilityByCodeDto cashAndCarriesProductAvailability = null;

  @SerializedName("operationResult")
  private OperationResult operationResult = null;

  public CashAndCarryProductAvailabilityByCodeOutput cashAndCarriesProductAvailability(CashAndCarriesProductAvailabilityByCodeDto cashAndCarriesProductAvailability) {
    this.cashAndCarriesProductAvailability = cashAndCarriesProductAvailability;
    return this;
  }

   /**
   * Contains all the available informations about the requested order.
   * @return cashAndCarriesProductAvailability
  **/
  @ApiModelProperty(value = "Contains all the available informations about the requested order.")
  public CashAndCarriesProductAvailabilityByCodeDto getCashAndCarriesProductAvailability() {
    return cashAndCarriesProductAvailability;
  }

  public void setCashAndCarriesProductAvailability(CashAndCarriesProductAvailabilityByCodeDto cashAndCarriesProductAvailability) {
    this.cashAndCarriesProductAvailability = cashAndCarriesProductAvailability;
  }

  public CashAndCarryProductAvailabilityByCodeOutput operationResult(OperationResult operationResult) {
    this.operationResult = operationResult;
    return this;
  }

   /**
   * Contains information about the result of this service call.
   * @return operationResult
  **/
  @ApiModelProperty(required = true, value = "Contains information about the result of this service call.")
  public OperationResult getOperationResult() {
    return operationResult;
  }

  public void setOperationResult(OperationResult operationResult) {
    this.operationResult = operationResult;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashAndCarryProductAvailabilityByCodeOutput cashAndCarryProductAvailabilityByCodeOutput = (CashAndCarryProductAvailabilityByCodeOutput) o;
    return Objects.equals(this.cashAndCarriesProductAvailability, cashAndCarryProductAvailabilityByCodeOutput.cashAndCarriesProductAvailability) &&
        Objects.equals(this.operationResult, cashAndCarryProductAvailabilityByCodeOutput.operationResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cashAndCarriesProductAvailability, operationResult);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashAndCarryProductAvailabilityByCodeOutput {\n");
    
    sb.append("    cashAndCarriesProductAvailability: ").append(toIndentedString(cashAndCarriesProductAvailability)).append("\n");
    sb.append("    operationResult: ").append(toIndentedString(operationResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

