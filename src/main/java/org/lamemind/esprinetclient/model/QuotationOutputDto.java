/*
 * Esprinet Customer Rest Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * Contact: dl-ws-integration@esprinet.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.lamemind.esprinetclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.lamemind.esprinetclient.model.QuotationProductDto;
import org.threeten.bp.OffsetDateTime;

/**
 * QuotationOutputDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-12-17T15:47:59.649+01:00")
public class QuotationOutputDto {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("date")
  private OffsetDateTime date = null;

  @SerializedName("validUntil")
  private OffsetDateTime validUntil = null;

  @SerializedName("customerQuotationReference")
  private String customerQuotationReference = null;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    PENDING("Pending"),
    
    APPROVED("Approved"),
    
    ORDERED("Ordered"),
    
    EXPIRED("Expired"),
    
    REJECTED("Rejected"),
    
    CANCELLED("Cancelled");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextObject();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("orderId")
  private String orderId = null;

  @SerializedName("products")
  private List<QuotationProductDto> products = null;

  public QuotationOutputDto id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public QuotationOutputDto date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public QuotationOutputDto validUntil(OffsetDateTime validUntil) {
    this.validUntil = validUntil;
    return this;
  }

   /**
   * Get validUntil
   * @return validUntil
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getValidUntil() {
    return validUntil;
  }

  public void setValidUntil(OffsetDateTime validUntil) {
    this.validUntil = validUntil;
  }

  public QuotationOutputDto customerQuotationReference(String customerQuotationReference) {
    this.customerQuotationReference = customerQuotationReference;
    return this;
  }

   /**
   * Get customerQuotationReference
   * @return customerQuotationReference
  **/
  @ApiModelProperty(value = "")
  public String getCustomerQuotationReference() {
    return customerQuotationReference;
  }

  public void setCustomerQuotationReference(String customerQuotationReference) {
    this.customerQuotationReference = customerQuotationReference;
  }

  public QuotationOutputDto state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public QuotationOutputDto orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @ApiModelProperty(value = "")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public QuotationOutputDto products(List<QuotationProductDto> products) {
    this.products = products;
    return this;
  }

  public QuotationOutputDto addProductsItem(QuotationProductDto productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<QuotationProductDto>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Get products
   * @return products
  **/
  @ApiModelProperty(value = "")
  public List<QuotationProductDto> getProducts() {
    return products;
  }

  public void setProducts(List<QuotationProductDto> products) {
    this.products = products;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuotationOutputDto quotationOutputDto = (QuotationOutputDto) o;
    return Objects.equals(this.id, quotationOutputDto.id) &&
        Objects.equals(this.date, quotationOutputDto.date) &&
        Objects.equals(this.validUntil, quotationOutputDto.validUntil) &&
        Objects.equals(this.customerQuotationReference, quotationOutputDto.customerQuotationReference) &&
        Objects.equals(this.state, quotationOutputDto.state) &&
        Objects.equals(this.orderId, quotationOutputDto.orderId) &&
        Objects.equals(this.products, quotationOutputDto.products);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, date, validUntil, customerQuotationReference, state, orderId, products);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuotationOutputDto {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    validUntil: ").append(toIndentedString(validUntil)).append("\n");
    sb.append("    customerQuotationReference: ").append(toIndentedString(customerQuotationReference)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

